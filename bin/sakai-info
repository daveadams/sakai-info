#!/usr/bin/env ruby
#
# sakai-info
#   Command line tool for exploring the Sakai database via the
#   sakai-info library
#
# Created 2012-02-15 daveadams@gmail.com
# Last updated 2012-02-24 daveadams@gmail.com
#
# https://github.com/daveadams/sakai-info
#
# This software is public domain.
#

require 'sakai-info'
include SakaiInfo

require 'sakai-info/cli'

ObjectModes = %w(site user)

flags = []
command = []
db_name = nil

while arg = ARGV.shift
  if arg =~ /^-/
    if arg == "-D"
      db_name = ARGV.shift
    elsif arg =~ /^--database=/
      db_name = arg.split("=")[1]
    else
      flags << arg
    end
  else
    command << arg
  end
end

if command.length < 1
  STDERR.puts "ERROR: No command was given."
  STDERR.puts "Run '#{File.basename($0)} help' for a list of commands."
  exit 1
end

case command[0]
when "help" then
  if not command[1].nil?
    CLI::Help.help command[1]
  else
    CLI::Help.help
  end
  exit

when "version" then
  puts VERSION
  exit

when "validate" then
  if DB.load_config
    puts "Configuration OK"
    exit
  end

when "test" then
  STDERR.puts "PENDING: test mode unimplemented"
  exit 1

else
  # test to see if it's an accepted object mode
  if ObjectModes.include? command[0]
    mode = command.shift

  else
    STDERR.puts "ERROR: Command '#{command[0]}' was not recognized."
    STDERR.puts "Run '#{File.basename($0)} help' for a list of commands."
    exit 1
  end
end

# load database config and set instance to the instance given on the command line
DB.load_config
if not db_name.nil?
  DB.default_database = db_name
end

puts flags.inspect

if mode == "user"
  case command[0]
  when "count" then
    puts User.count
  else
    puts User.find(command[0]).to_yaml
  end

elsif mode == "site"
  case command[0]
  when "count" then
    puts Site.count
  else
    puts Site.find(command[0]).to_yaml
  end
end

